kind: Template
apiVersion: v1
labels:
  app: "${NAME}"
  template: "${NAME}-deployment"
  tier: backend
metadata:
  name: "${NAME}-deployment-template"
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: Exposes and load balances the application pods.
      labels:
        app: "${NAME}"
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        app: ${NAME}
      type: ClusterIP
      sessionAffinity: None
  - kind: Route
    apiVersion: v1
    metadata:
      name: "${NAME}"
      labels:
        app: "${NAME}"
    spec:
      host: "${HOST}"
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
        certificate: |-
          ${TLS_CERT_PEM}
        key: |-
          ${TLS_KEY_PEM}
        caCertificate: |-
          ${TLS_CACERT_PEM}
      to:
        kind: Service
        name: "${NAME}"
        weight: 100
      port:
        targetPort: 8080-tcp
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: "Defines how to deploy ${NAME}"
    spec:
      strategy:
        rollingParams:
          timeoutSeconds: 600
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          UpdatePeriodSeconds: 1
        type: Rolling
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${NAME}"
            from:
              kind: ImageStreamTag
              namespace: "${IMAGE_NAMESPACE}"
              name: "${NAME}:${SOURCE_IMAGE_TAG}"
      replicas: ${{REPLICA_COUNT}}
      selector:
        app: ${NAME}
      template:
        metadata:
          name: "${NAME}"
          labels:
            app: ${NAME}
            role: server
        spec:
          containers:
            - name: "${NAME}"
              image: ""
              ports:
                - containerPort: 8080
                  protocol: TCP
              envFrom:
                - secretRef:
                    name: bcdevx-creds
              env:
                - name: ASPNETCORE_ENVIRONMENT
                  value: "${ASPNETCORE_ENVIRONMENT}" 
              resources:
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
              readinessProbe:
                httpGet:
                  path: /hc
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              livenessProbe:
                httpGet:
                  path: /hc
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: "${NAME}"
      labels:
        app: "${NAME}"
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: "${NAME}"
        apiVersion: v1
      minReplicas: "${{MIN_REPLICAS}}"
      maxReplicas: "${{MAX_REPLICAS}}"
      targetCPUUtilizationPercentage: 80
parameters:
  - name: NAME
    displayName: Name
    description:
      The name assigned to all of the resources defined in this template.
    required: true
    value: bcdevexchange
  - name: SOURCE_IMAGE_TAG
    required: true
  - name: HOST
    displayName: Application Hostname
    description: >-
      The exposed hostname that will route to the application, if left blank a
      value will be defaulted.
    value: ""
  - name: ASPNETCORE_ENVIRONMENT
    displayName: AspNetCore Environment
    description: |
      The ASP Net Core deployment environment setting, e.g.
      Development, Staging, or Production.
    required: true
    value: Development
  - name: BEARER_TOKEN
    displayName: Bearer Token
    description: >-
      EventBrite Token
    required: true
    value: Development
  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    description: >-
      The namespace of the OpenShift project containing the imagestream for the
      application.
    required: false
    value: fd34fb-tools
  - name: CPU_LIMIT
    displayName: CPU Limit
    description: Maximum amount of CPU the container can use.
    required: true
    value: 250m
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maximum amount of memory the container can use.
    required: true
    value: 512Mi
  - name: CPU_REQUEST
    displayName: CPU Request
    description: Starting amount of CPU the container can use.
    required: true
    value: 60m
  - name: MEMORY_REQUEST
    displayName: Memory Request
    description: Starting amount of memory the container can use.
    required: true
    value: 128Mi
  - name: REPLICA_COUNT
    displayName: Initial Replica Count
    description: |
      The number of pods to initially spin up when the application
      is deployed.
    required: true
  - name: MIN_REPLICAS
    displayName: Minimum Replica count
    description: Minimum number of replicas
    required: true
    value: "1"
  - name: MAX_REPLICAS
    displayName: Maximum Replica count
    description: Maximum number of replicas
    required: true
    value: "2"
  - name: TLS_CERT_PEM
    description: TLS certificate data in PEM format.
    displayName: TLS Certificate
    # required: true
  - name: TLS_KEY_PEM
    description: |
      TLS certificate private key data in PEM format. This will be in
      the possession of the person who created the Certificate Signing
      Request (CSR).
    displayName: TLS Private Key
    # required: true
  - name: TLS_CACERT_PEM
    description: |
      TLS certificate authority certificate data in PEM format. If you
      got your certificate from an iStore request, use L1KChain.txt.
    displayName: TLS Certificate Authority Certificate
    # required: true